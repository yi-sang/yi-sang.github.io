---
title: '부분수열의 합'
post-image: ../assets/images/algorithmStudy.jpg
categories: ['Algorithm']
tags: ['브루트포스']

---
# 부분수열의 합 
 
# 문제
N개의 정수로 이루어진 수열이 있을 때, 크기가 양수인 부분수열 중에서 그 수열의 원소를 다 더한 값이 S가 되는 경우의 수를 구하는 프로그램을 작성하시오.

## 입력
첫째 줄에 정수의 개수를 나타내는 N과 정수 S가 주어진다. (1 ≤ N ≤ 20, |S| ≤ 1,000,000) 둘째 줄에 N개의 정수가 빈 칸을 사이에 두고 주어진다. 주어지는 정수의 절댓값은 100,000을 넘지 않는다.

## 출력
첫째 줄에 합이 S가 되는 부분수열의 개수를 출력한다.

## 예제 입력 1
5 0
-7 -3 -2 5 8
## 예제 출력 1
1

## On my way

```python
def Solution(idx, idxSum):
    global count
    if idx >= N:
        return
    idxSum += intList[idx]
    if idxSum == M:
        count += 1
    Solution(idx+1, idxSum)
    Solution(idx+1, idxSum - intList[idx])

N, M = map(int, input().split())
intList = list(map(int, input().split()))
count = 0
Solution(0, 0)
print(count)
```
💡 재귀의 호출이 어렵다..
combinations를 안 써보려고 해봤다!

## On other way
```python
import sys
from itertools import combinations

input = sys.stdin.readline
n, s = map(int, input().split())
arr = list(map(int, input().split()))
cnt = 0
for i in range(1, n+1):
    comb = combinations(arr, i)

    for x in comb:
        if sum(x) == s:
            cnt += 1

print(cnt)
```
💡 시간에 걸릴 줄 알았는데 안걸리네.
N이 적어서 그런 가 보다.
